{"mappings":"AAIA,IAAIA,QAAUC,SAASC,cAAc,YACjCC,SAAWF,SAASC,cAAc,QAClCE,UAAYH,SAASC,cAAc,cACnCG,WAAaJ,SAASC,cAAc,aACpCI,SAAWL,SAASC,cAAc,gBAiBtC,SAASK,gBACFP,QAAQQ,UAAUC,SAAS,QAC1BN,SAASK,UAAUE,QAAQ,UAAW,qBAEtCP,SAASK,UAAUE,QAAQ,oBAAoB,WAKvD,SAASC,iBACFL,SAASE,UAAUC,SAAS,mBAC3BH,SAASE,UAAUE,QAAQ,iBAAkB,mBAC7CJ,SAASM,MAAMC,MAAQ,YAEvBP,SAASE,UAAUE,QAAQ,kBAAkB,kBAC7CJ,SAASM,MAAMC,MAAQ,WA9B/BV,SAASW,iBAAiB,SAAS,KAC/Bd,QAAQQ,UAAUO,OAAO,QACzBR,mBAGJD,SAASQ,iBAAiB,SAAS,KAC/BH,oBAGJN,WAAWS,iBAAiB,SAAS,KACjCd,QAAQQ,UAAUO,OAAO,QACzBR,mBA2BJ,IAAIS,QAAU,IAAIC,KAEdC,QAAUjB,SAASC,cAAc,gBACjCiB,SAAWlB,SAASC,cAAc,iBAElCkB,OAAS,CACT,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YACFJ,QAAQK,YAENC,MAAQ,CACR,SACA,UACA,YACA,WACA,SACA,WACA,UACFN,QAAQO,SAAW,GAGrBL,QAAQM,UAAYF,MAAQ,KAC5BH,SAASK,UAAYR,QAAQS,UAAY,IAAML,OAAS,IAAMJ,QAAQU,cAMtE,IAAIC,KAAO,IAAIV,KAEXW,eAAiB,KACjBD,KAAKE,QAAQ,GAIb,IAAIC,EAAU7B,SAASC,cAAc,SAIjC6B,EAAU,IAAId,KACdU,KAAKD,cACLC,KAAKN,WAAa,EAClB,GACFI,UAEEO,EAAc,IAAIf,KAClBU,KAAKD,cACLC,KAAKN,WACL,GACFI,UAEEQ,EAAgBN,KAAKJ,SAQrBW,EAAW,EANI,IAAIjB,KACnBU,KAAKD,cACLC,KAAKN,WAAa,EAClB,GACFE,SAEgC,EAI9BY,EAAS,CACT,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YACFR,KAAKN,YAULM,KAAKJ,SAGPtB,SAASC,cAAc,cAAcsB,UAAYW,EACjDlC,SAASC,cAAc,aAAasB,UAAYG,KAAKD,cAIrD,IAAIU,EAAO,GAEX,IAAK,IAAIC,EAAIJ,EAAeI,EAAI,EAAGA,IAC/BD,GAAQ,6BAA6BJ,EAAcK,EAAI,UAG3D,IAAK,IAAIC,EAAI,EAAGA,GAAKP,EAASO,IACvBA,KAAM,IAAIrB,MAAOQ,WAAaE,KAAKN,cAAe,IAAIJ,MAAOI,WAC5De,GAAQ,sBAAsBE,UAE9BF,GAAQ,QAAQE,UAIxB,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAUK,IAC3BH,GAAQ,6BAA6BG,UACrCT,EAAQN,UAAYY,GAK5BnC,SAASC,cAAc,mBAAmBY,iBAAiB,SAAS,KAChEa,KAAKa,SAASb,KAAKN,WAAa,GAChCO,oBAGJ3B,SAASC,cAAc,oBAAoBY,iBAAiB,SAAS,KACjEa,KAAKa,SAASb,KAAKN,WAAa,GAChCO,oBAGJA","sources":["public/script.js"],"sourcesContent":["//-----------------//\n// Button Switches //\n//-----------------//\n\nlet sidebar = document.querySelector(\".sidebar\");\nlet closeBtn = document.querySelector(\"#btn\");\nlet searchBtn = document.querySelector(\".bx-search\");\nlet fswitchBtn = document.querySelector(\".f_switch\");\nlet focusBtn = document.querySelector(\"#bolt_switch\");\n\ncloseBtn.addEventListener(\"click\", ()=> {\n    sidebar.classList.toggle(\"open\");\n    menuBtnChange(); // calling the function\n});\n\nfocusBtn.addEventListener(\"click\", ()=> {\n    focusBtnChange(); // calling the function\n});\n\nfswitchBtn.addEventListener(\"click\", ()=> { // Sidebar open when you click on the focus icon\n    sidebar.classList.toggle(\"open\");\n    menuBtnChange(); // calling the function\n});\n\n//  Changes sidebar hamburger button on click\nfunction menuBtnChange() {\n    if(sidebar.classList.contains(\"open\")) {\n        closeBtn.classList.replace(\"bx-menu\", \"bx-menu-alt-right\"); // replaces the icons class\n    } else {\n        closeBtn.classList.replace(\"bx-menu-alt-right\",\"bx-menu\"); // replaces the icons class\n    }\n}\n\n//  Toggles focus mode on/off - changing icon design\nfunction focusBtnChange() {\n    if(focusBtn.classList.contains(\"bx-bolt-circle\")) {\n        focusBtn.classList.replace(\"bx-bolt-circle\", \"bxs-bolt-circle\"); // replaces the icons class\n        focusBtn.style.color = \"#E95050\";\n    } else {\n        focusBtn.classList.replace(\"bxs-bolt-circle\",\"bx-bolt-circle\"); // replaces the icons class\n        focusBtn.style.color = \"#E950D1\";\n    }\n}\n\n//-----------------//\n// TOP NAVBAR DATE //\n//-----------------//\n\nlet topDate = new Date();\n\nlet currDay = document.querySelector(\"#current_day\");\nlet currDate = document.querySelector(\"#current_date\");\n\nlet cMonth = [\n    \"January\", \n    \"February\", \n    \"March\", \n    \"April\", \n    \"May\", \n    \"June\", \n    \"July\", \n    \"August\", \n    \"September\", \n    \"October\", \n    \"November\", \n    \"December\"\n][topDate.getMonth()];\n\nlet cWDay = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\", \n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\"\n][topDate.getDay() - 1];\n\n// Setting Top Navbar Current Date (Custom Display)\ncurrDay.innerHTML = cWDay + \", \";\ncurrDate.innerHTML = topDate.getDate() + \" \" + cMonth + \" \" + topDate.getFullYear(); \n\n//--------------------//\n// DASHBOARD CALENDER //\n//--------------------//\n\nlet date = new Date();\n\nlet renderCalendar = () => {\n    date.setDate(1);\n\n    // Attatching JS to HTML elements\n\n    let calDays = document.querySelector(\".days\");\n    \n    // Calender Calculations\n\n    let lastDay = new Date( // calc last day of current month\n        date.getFullYear(), \n        date.getMonth() + 1, \n        0\n    ).getDate(); \n\n    let prevLastDay = new Date(  // calc last day of last month\n        date.getFullYear(),\n        date.getMonth(),\n        0\n    ).getDate();\n\n    let firstDayIndex = date.getDay(); // calc first day of month\n\n    let lastDayIndex = new Date( // calc last day of current week\n        date.getFullYear(),\n        date.getMonth() + 1,\n        0\n    ).getDay();\n\n    let nextDays = 7 - lastDayIndex - 1; // calc how many days of next month to inc\n    \n    // Setting up months and weekdays\n\n    let months = [\n        \"January\", \n        \"February\", \n        \"March\", \n        \"April\", \n        \"May\", \n        \"June\", \n        \"July\", \n        \"August\", \n        \"September\", \n        \"October\", \n        \"November\", \n        \"December\"\n    ][date.getMonth()];\n    \n    let weekday = [\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\", \n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n        \"Sunday\"\n    ][date.getDay()];\n    \n    // Adding current Month/Year to Calender Top\n    document.querySelector(\"#currMonth\").innerHTML = months;\n    document.querySelector(\"#currYear\").innerHTML = date.getFullYear();\n    \n    // Adding Month Days (prev, current, next) to Calender\n\n    let days = \"\";\n    \n    for (let x = firstDayIndex; x > 0; x--) {\n        days += `<div id=\"prev-month-days\">${prevLastDay - x + 1}</div>`;\n    }\n    \n    for (let i = 1; i <= lastDay; i++) {\n        if(i === new Date().getDate() && date.getMonth() === new Date().getMonth()) {\n            days += `<div class=\"today\">${i}</div>`;\n        } else {\n            days += `<div>${i}</div>`;\n        }\n    }\n    \n    for (let j = 1; j <= nextDays; j++) {\n        days += `<div id=\"next-month-days\">${j}</div>`;\n        calDays.innerHTML = days;\n    }\n}\n\n// linking calender nav arrows to prev and next months \ndocument.querySelector('.left-arrow-cal').addEventListener('click', () => {\n    date.setMonth(date.getMonth() - 1);\n    renderCalendar();\n});\n\ndocument.querySelector('.right-arrow-cal').addEventListener('click', () => {\n    date.setMonth(date.getMonth() + 1);\n    renderCalendar();\n});\n\nrenderCalendar();"],"names":["sidebar","document","querySelector","closeBtn","searchBtn","fswitchBtn","focusBtn","menuBtnChange","classList","contains","replace","focusBtnChange","style","color","addEventListener","toggle","topDate","Date","currDay","currDate","cMonth","getMonth","cWDay","getDay","innerHTML","getDate","getFullYear","date","renderCalendar","setDate","calDays","lastDay","prevLastDay","firstDayIndex","nextDays","months","days","x","i","j","setMonth"],"version":3,"file":"index.d3e886c8.js.map"}